# status bar
set -ga terminal-overrides ",*256col*:Tc"

# DEFAULT configuration, mostly overridden by tmuxline configs if present
# colors designed to be compatible with solarized dark

# default statusbar colors
set-option -g status-bg black #base02
set-option -g status-fg yellow #yellow
set-option -g status-attr default

set-window-option -g window-status-format "#[fg=brightred,bg=black]#I:#[fg=brightgreen]#W#[default]"
set-window-option -g window-status-current-format "#[fg=brightred,bg=black]#I:[#[fg=green]#W#[fg=brightred]]#[default]"

# pane border
set-option -g pane-border-fg black #base02
set-option -g pane-active-border-fg colour41 #base01

# message text
set-option -g message-bg black #base02
set-option -g message-fg brightred #orange

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green
set-window-option -g clock-mode-style 24

# modifiers key code scheme (mostly for vim)
set-window-option -g xterm-keys on

# status line configuration
set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 28
set -g status-right-length 140
set -g status-left '#[fg=red,bg=black]#H #[fg=brightgreen]• #[fg=brightblue]#(uname -r | cut -c 1-8)#[default]'
set -g status-right '#[fg=brightblue,bg=black]#(tmux-mem-cpu-load 1) #[fg=brightgreen]• #[fg=brightcyan]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=brightgreen]• #[fg=yellow]%a%l:%M:%S %p #[fg=brightgreen]• #[fg=yellow]%Y-%m-%d #[default]'

# discard the above and use tmuxline.vim (https://github.com/edkolev/tmuxline.vim.git)

# first one is default
if-shell "test -f ~/.tmuxline-256dark.conf" "source ~/.tmuxline-256dark.conf"
if-shell "test -f ~/.tmuxline-256light.conf -a z$MYCOLORSTYLE = z256light" "source ~/.tmuxline-256light.conf"
if-shell "test -f ~/.tmuxline-16dark.conf -a z$MYCOLORSTYLE = z16dark" "source ~/.tmuxline-16dark.conf"
if-shell "test -f ~/.tmuxline-16light.conf -a z$MYCOLORSTYLE = z16light" "source ~/.tmuxline-16light.conf"
if-shell "test -f ~/.tmuxline-16Mdark.conf -a z$MYCOLORSTYLE = z16Mdark" "source ~/.tmuxline-16Mdark.conf"
if-shell "test -f ~/.tmuxline-16Mlight.conf -a z$MYCOLORSTYLE = z16Mlight" "source ~/.tmuxline-16Mlight.conf"

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# splitting windows
bind '"' split-window -h
bind _ split-window -v

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
set-window-option -g automatic-rename

# rm mouse mode fail
#set -g mode-mouse off
#set -g mouse-utf8 on
#set -g mouse-select-pane off
#set -g mouse-select-window off
#set -g mouse-resize-pane off

bind y if '[ -n "$DISPLAY" ]' 'run-shell "tmux save-buffer - | xclip -i -selection clipboard"' 'run-shell "tmux save-buffer - | xtermclip >/dev/null"'

# color
set -g default-terminal "screen-256color"
